name: microservice-ecommerce

services:
    proxy:
        image: huyfst/proxy
        container_name: proxy
        depends_on:
            - auth
            - order
            - payment
            - cart
            - product
        networks:
            - microservice
        ports:
            - target: 3000
              protocol: tcp
              published: 3000
        environment: 
            PUB_KEY_FILE: /run/secrets/pub_key
        secrets:
            - pub_key
        
    auth:
        image: huyfst/auth
        deploy: 
            mode: replicated
            replicas: 3
        networks:
            - microservice
        depends_on: 
            auth-db:
                condition: service_healthy
        environment:
            DSN_FILE: /run/secrets/auth_dsn
        secrets:
            - auth_dsn

    auth-db:
        image: postgres
        container_name: auth-db
        restart: always
        networks:
            - microservice
        volumes:
            - type: volume
              source: auth-db-data
              target: /data
        environment:
            POSTGRES_PASSWORD_FILE: /run/secrets/db_pass
            POSTGRES_USER: huyfst
            POSTGRES_DB: auth
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "huyfst", "-d", "auth"]
            interval: 5s
            timeout: 3s
            retries: 5
        secrets:
            - db_pass
            
    cart:
        image: huyfst/cart
        deploy: 
            mode: replicated
            replicas: 3
        depends_on: 
            cart-db:
                condition: service_healthy
            cart-redis:
                condition: service_healthy
        networks:
            - microservice
        environment:
            DSN_FILE: /run/secrets/cart_dsn
            REDIS_ADDR: cart-redis:6379
        secrets:
            - cart_dsn

    cart-db:
        image: postgres
        container_name: cart-db
        restart: always
        networks:
            - microservice
        volumes:
            - type: volume
              source: cart-db-data
              target: /data
        environment:
            POSTGRES_PASSWORD_FILE: /run/secrets/db_pass
            POSTGRES_USER: huyfst
            POSTGRES_DB: cart
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "huyfst", "-d", "cart"]
            interval: 5s
            timeout: 3s
            retries: 5
        secrets:
            - db_pass

    cart-redis:
        image: redis
        container_name: cart-redis
        networks:
            - microservice
        healthcheck:
            test: ["CMD", "redis-cli", "PING"]
            interval: 5s
            timeout: 3s
            retries: 5

    order:
        image: huyfst/order
        deploy: 
            mode: replicated
            replicas: 3
        depends_on: 
            order-db:
                condition: service_healthy
        networks:
            - microservice
        environment:
            PORT: 3004
            DB_NAME: order
            DB_USER: huyfst
            DB_PASS_FILE: /run/secrets/order_db_pass
            DB_HOST: order-db
            GRPC_SERVER: payment:50051
        secrets:
            - order_db_pass

    order-db:
        image: postgres
        container_name: order-db
        restart: always
        networks:
            - microservice
        volumes:
            - type: volume
              source: order-db-data
              target: /data
        environment:
            POSTGRES_PASSWORD_FILE: /run/secrets/db_pass
            POSTGRES_USER: huyfst
            POSTGRES_DB: order
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "huyfst", "-d", "order"]
            interval: 5s
            timeout: 3s
            retries: 5
        secrets:
            - db_pass

    payment:
        image: huyfst/payment
        deploy: 
            mode: replicated
            replicas: 3
        depends_on: 
            payment-db:
                condition: service_healthy
        networks:
            - microservice
        environment:
            DSN_FILE: /run/secrets/payment_dsn
        secrets:
            - payment_dsn

    payment-db:
        image: postgres
        container_name: payment-db
        restart: always
        networks:
            - microservice
        volumes:
            - type: volume
              source: payment-db-data
              target: /data
        environment:
            POSTGRES_PASSWORD_FILE: /run/secrets/db_pass
            POSTGRES_USER: huyfst
            POSTGRES_DB: payment
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "huyfst", "-d", "payment"]
            interval: 5s
            timeout: 3s
            retries: 5
        secrets:
            - db_pass

    product:
        image: huyfst/product
        deploy: 
            mode: replicated
            replicas: 3
        depends_on: 
            product-db:
                condition: service_healthy
        networks:
            - microservice
        environment:
            PORT: 3005
            DB_NAME: product
            DB_USER: huyfst
            DB_PASS_FILE: /run/secrets/product_db_pass
            DB_HOST: product-db
        secrets: 
            - product_db_pass

    product-db:
        image: postgres
        container_name: product-db
        restart: always
        networks:
            - microservice
        volumes:
            - type: volume
              source: product-db-data
              target: /data
        environment:
            POSTGRES_PASSWORD_FILE: /run/secrets/db_pass
            POSTGRES_USER: huyfst
            POSTGRES_DB: product
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "huyfst", "-d", "product"]
            interval: 5s
            timeout: 3s
            retries: 5
        secrets:
            - db_pass
    
    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin
        networks: 
            - microservice
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@example.com
            PGADMIN_DEFAULT_PASSWORD: admin123
        ports:
            - target: 80
              protocol: tcp
              published: 5000

networks:
    microservice:
        driver: bridge

volumes:
    auth-db-data:
        driver: local
    cart-db-data:
        driver: local
    order-db-data:
        driver: local
    payment-db-data:
        driver: local
    product-db-data:
        driver: local

secrets:
    db_pass:
        file: ./dbpass.txt
    order_db_pass:
        file: ./dbpass.txt
    product_db_pass:
        file: ./dbpass.txt
    auth_dsn:
        file: ./auth-dsn.txt
    cart_dsn:
        file: ./cart-dsn.txt
    payment_dsn:
        file: ./payment-dsn.txt
    pub_key:
        file: ./api-gateway/pub-key.pem
    